vertex_program SpherePointSpritesVS cg
{
	source SpherePointSprites.cg
	entry_point particleSphereVS
	profiles gp4vp glslv arbvp1 vp20 vp30
}

geometry_program ParticleGS cg
{
	source PointToQuadGS.cg
	entry_point passthru_gp
	input_operation_type point_list
	output_operation_type triangle_strip
	max_output_vertices 4 //  example uses 5, reason?
	profiles gp4gp glslg
	
	default_params
	{
		param_named width float 1.0
		param_named height float 1.0
	}
}

fragment_program SpherePointSpritesDiffusePS cg
{
	source SpherePointSprites.cg
	entry_point particleSphereDiffusePS
	profiles gp4fp glslf arbfp1 fp20 fp30
	//compiler_arguments debug
}

fragment_program SpherePointSpritesDepthPS cg
{
	source SpherePointSprites.cg
	entry_point particleSphereDepthPS
	profiles gp4fp glslf arbfp1 fp20 fp30
}

material SpherePointSprites
{
	technique
	{
		pass
		{
			//point_sprites on
			//point_size_attenuation off
			//point_size 1
			//ambient 0.918 0.051 0.051
			//depth_func not_equal
			depth_check on
			
			vertex_program_ref SpherePointSpritesVS
			{
				param_named_auto modelViewMatrix worldview_matrix
				param_named_auto projectionMatrix projection_matrix
			}
			
			//geometry_program_ref ParticleGS
			//{
			//}
			
			fragment_program_ref SpherePointSpritesDiffusePS 
			{
				param_named sphereRadius float 0.4
				param_named_auto projectionMatrix projection_matrix
				param_named_auto lightDir light_direction 0
				param_named_auto ambient ambient_light_colour
				//param_named lightDir float4 0.0 1.0 0.0 0.0
			}
		}
	}
}

//material SpherePointSpritesWithGS : SpherePointSprites
//{
//	technique
//	{
//		pass
//		{
//			geometry_program_ref ParticleGS 
//			{
//			}
//		}
//	}
//}


fragment_program FluidSurfaceShadingPS cg
{
	source FluidSurfaceShading.cg
	entry_point shadeFluidSurfacePS
	profiles gp4fp glslf arbfp1 fp20 fp30
}	

material FluidSurfaceShading
{
	technique
	{
		pass
		{
			texture_unit samplerDepth
			{
				content_type compositor ScreenSpaceParticleFluid SphereDepth
			}
			
			fragment_program_ref FluidSurfaceShadingPS
			{
			}				
		}
	}
}