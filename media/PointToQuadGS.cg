TRIANGLE
TRIANGLE_OUT
void passthru_gp(AttribArray<float4> position : POSITION,
				 AttribArray<float2> texCoord0 : TEXCOORD0,
				 AttribArray<float3> texCoord1 : TEXCOORD1)
{
	for(int i=0; i<position.length; i++) {
		emitVertex(position[i] : POSITION, texCoord0[i] : TEXCOORD0, texCoord1[i] : TEXCOORD1); 
	}
}


POINT
TRIANGLE_OUT
void pointToQuad(AttribArray<float4> position : POSITION,
                 uniform float quadSize,
                 uniform float4x4 modelViewMatrix,
	             uniform float4x4 projectionMatrix)
{
    float2 halfSize = float2(quadSize, quadSize) * 0.5;
    
    // TODO: variable names..position, pos, position_out
    float2 quadCorners[4];
    quadCorners[0] = float2(-1.0, +1.0);
    quadCorners[1] = float2(-1.0, -1.0);
    quadCorners[2] = float2(+1.0, +1.0);
    quadCorners[3] = float2(+1.0, -1.0);

    for(int i=0; i<4; ++i) {
        float4 positionOut = position[0];
        positionOut.xy += quadCorners[i] * halfSize;
        float4 eyeSpacePos =  mul(modelViewMatrix, positionOut);
        positionOut = mul(projectionMatrix, eyeSpacePos);

        emitVertex(positionOut : POSITION,
                   quadCorners[i] : TEXCOORD0,
                   eyeSpacePos.xyz : TEXCOORD1);
    }

    //emitVertex(position[0]);

}